import requests
from bs4 import BeautifulSoup
import pandas as pd
import numpy as np
from datetime import datetime,timedelta

StartDate = datetime(year,month,day,hour,minute) # Starting date that you want to select
EndDate = datetime(2010,12,31,14,0)              # Last date that you want to select

Date = str(StartDate)
Date = Date.replace("-",".")
Date = Date.replace(" ",".")
Date = Date[:-6]

EndDate = str(EndDate).replace("-",".")
EndDate = EndDate.replace(" ",".")
EndDate = EndDate[:-3]

# use requests package
url = "https://www.weather.go.kr/weather/observation/currentweather.jsp?auto_man=m&stn=0&type=t11&reg=100&tm="+Date+"%3A00&x=16&y=5"
res = requests.get(url)
print("응답코드:", res.status_code) ## 200이면 정상, 403이면 접근권한 없음
    
soup = BeautifulSoup(res.text,"html.parser")


# 지역별 기온 표 전체를 받기
table = soup.select('table') 
table = str(table[0])
table_df_list = pd.read_html(table)
table_df = table_df_list[0]

# 날짜 받기
date = soup.select_one('#observation_text')
date = date["value"]
time = datetime(int(date[:4]),int(date[5:7]),int(date[8:10]),int(date[11:13]),int(date[14:16]))
print(time)
# 지역 수 받기
NoOfCities = len(table_df)

# 1년 전체 횟수 데이터 틀 만들기
Result = table_df.iloc[:,:2]
Result.rename(columns = {'01H' : 'Rep'}, inplace = True)
Result["Rep"] = 0

# 오전 8시부터 오후 6시까지만 추출하기
Worktime = pd.concat([table_df.iloc[:,0],table_df.iloc[:,8:19]],axis = 1)

# 기온이 영하인 시간대만 추출하기
Cold = Worktime[Worktime.iloc[:,1:]<0]
Cold = np.array(Cold)

# 각 지역별로 기온이 영하인 총 시간 구하기
for i in range(NoOfCities):
    num = (Cold[i]<0).sum()
    Result.iloc[i,1] += num
    
 # 다른 날짜로 이동해서 같은 거 반복하기
while(date != EndDate):
    time += timedelta(days = 1)

    Date = str(time)
    Date = Date.replace("-",".")
    Date = Date.replace(" ",".")
    Date = Date[:-6]

    url = "https://www.weather.go.kr/weather/observation/currentweather.jsp?auto_man=m&stn=0&type=t11&reg=100&tm="+Date+"%3A00&x=16&y=5"
    res = requests.get(url)
    
    soup = BeautifulSoup(res.text,"html.parser")
    
    # 지역별 기온 표 전체를 받기
    table = soup.select('table.table_develop3') 
    table = str(table)
    table_df_list = pd.read_html(table)
    table_df = table_df_list[0]

    # 날짜 받기
    date = soup.select_one('#observation_text')
    date = date["value"]
    print(date)
    #time = datetime(int(date[:4]),int(date[5:7]),int(date[8:10]),int(date[11:13]),int(date[14:16]))


    # 오전 8시부터 오후 6시까지만 추출하기
    Worktime = pd.concat([table_df.iloc[:,0],table_df.iloc[:,8:19]],axis = 1)

    # 기온이 영하인 시간대만 추출하기
    Cold = Worktime[Worktime.iloc[:,1:]<0]
    Cold = np.array(Cold)

    # 각 지역별로 기온이 영하인 총 시간 구하기
    for i in range(NoOfCities):
        num = (Cold[i]<0).sum()
        Result.iloc[i,1] += num
        
for i in range(NoOfCities):
    Result.iloc[i,1] = Result.iloc[i,1]/36500
  
Result.to_excel('WeatherKorea.xlsx')
